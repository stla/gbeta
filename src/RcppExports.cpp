// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// euler
Rcpp::NumericVector euler(const double c, const double d, const double kappa, const double tau, const Rcpp::NumericVector q, const int subdiv, const double eps_abs, const double eps_rel);
RcppExport SEXP _gbeta_euler(SEXP cSEXP, SEXP dSEXP, SEXP kappaSEXP, SEXP tauSEXP, SEXP qSEXP, SEXP subdivSEXP, SEXP eps_absSEXP, SEXP eps_relSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type c(cSEXP);
    Rcpp::traits::input_parameter< const double >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< const double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type q(qSEXP);
    Rcpp::traits::input_parameter< const int >::type subdiv(subdivSEXP);
    Rcpp::traits::input_parameter< const double >::type eps_abs(eps_absSEXP);
    Rcpp::traits::input_parameter< const double >::type eps_rel(eps_relSEXP);
    rcpp_result_gen = Rcpp::wrap(euler(c, d, kappa, tau, q, subdiv, eps_abs, eps_rel));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gbeta_euler", (DL_FUNC) &_gbeta_euler, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_gbeta(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
